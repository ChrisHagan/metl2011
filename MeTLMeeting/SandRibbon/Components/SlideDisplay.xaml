<UserControl x:Class="SandRibbon.Components.SlideDisplay"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:SandRibbonInterop="clr-namespace:SandRibbonInterop;assembly=SandRibbonInterop"
    xmlns:components="clr-namespace:SandRibbon.Components"
    xmlns:api="clr-namespace:SandRibbon;assembly=SandRibbonInterop"
    xmlns:my="clr-namespace:SandRibbon"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:sr="http://schemas.divelements.co.uk/wpf/sandribbon"
    x:Name="SlideMeasure" >
    <UserControl.Resources>
        <core:String x:Key="defaultPrivacy">public</core:String>
        <core:String x:Key="target">presentationSpace</core:String>
        <core:Double x:Key="thumbAspect">0.75</core:Double>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding ElementName=NavigationControls, Path=Height}"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <components:SlideNavigationControls x:Name="NavigationControls" Grid.Row="0"/>
        <ListBox
             x:Name="slides"
             Grid.Row="1"
             ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
             ScrollViewer.VerticalScrollBarVisibility="Visible"
             OverridesDefaultStyle="False"
             SelectionChanged="slides_SelectionChanged"
             Background="Transparent"
             HorizontalAlignment="Stretch" Width="Auto" >
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Height">
                        <Setter.Value>
                            <MultiBinding Converter="{x:Static my:Converters.multiply}">
                                <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                                <Binding Source="{StaticResource thumbAspect}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border
                                    Name="Border" Margin="1" 
                                    Padding="5" Background="{StaticResource BackgroundBlueGradient}"
                                    SnapsToDevicePixels="true" CornerRadius="2">
                                    <Grid>
                                        <Viewbox IsHitTestVisible="False">
                                            <!--<ContentPresenter Content="{Binding image}" Height="200" Width="320" />-->
                                            <Image Height="200" Width="320">
                                                <Image.Source><!-- This is ugly as stink.  You'll find that this value converter
                                                    actually returns null, but schedules the image to have its source updated
                                                    when the data comes asynchronously down from the web-->
                                                    <MultiBinding Converter="{x:Static components:SlideDisplay.SlideToThumb}">
                                                        <Binding RelativeSource="{RelativeSource Self}" />
                                                    </MultiBinding>
                                                </Image.Source> 
                                            </Image>
                                        </Viewbox>
                                        <Border CornerRadius="2" BorderBrush="{StaticResource PressedBorderBrush}"
                                                HorizontalAlignment="Right" Background="{StaticResource BackgroundBlueGradient}"
                                                VerticalAlignment="Bottom" 
                                                BorderThickness="1">
                                            <!--<Label Content="{Binding index, Converter={x:Static components:SlideDisplay.SlideIndexConverter}}"/>-->
                                            <Label Content="{Binding Converter={x:Static components:SlideDisplay.SlideIndex}}"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedGradient}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverGradient}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>
</UserControl>