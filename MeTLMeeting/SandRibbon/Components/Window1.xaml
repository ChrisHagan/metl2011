<sr:RibbonWindow x:Class="SandRibbon.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sr="http://schemas.divelements.co.uk/wpf/sandribbon"
    xmlns:components="clr-namespace:SandRibbon.Components"
    xmlns:api="clr-namespace:SandRibbon;assembly=SandRibbonInterop"
    xmlns:my="clr-namespace:SandRibbon"
    xmlns:simple="clr-namespace:SandRibbon.Components.SimpleImpl"
    xmlns:chrome="clr-namespace:SandRibbon.Chrome"
    xmlns:tabs="clr-namespace:SandRibbon.Tabs"
    xmlns:quiz="clr-namespace:SandRibbon.Quizzing"
    xmlns:sandpit="clr-namespace:SandRibbon.Components.Sandpit"
    xmlns:SandRibbonInterop="clr-namespace:SandRibbonInterop;assembly=SandRibbonInterop"
    xmlns:widgets="clr-namespace:SandRibbon.Widgets"
    AllowDrop="True"
    Title="MeTL"
    x:Name="ribbonWindow"
    WindowState="Maximized"
    Icon="..\Resources\MeTL.ico">
    <sr:RibbonWindow.CommandBindings>
        <CommandBinding Command="{x:Static api:Commands.ZoomIn}" CanExecute="canZoomIn" Executed="doZoomIn" />
        <CommandBinding Command="{x:Static api:Commands.ZoomOut}" CanExecute="canZoomOut" Executed="doZoomOut" />
        <CommandBinding Command="{x:Static api:Commands.RetrievedHistoryPortion}" Executed="receivedHistoryPortion" />
        <CommandBinding Command="{x:Static api:Commands.CloseApplication}" Executed="closeApplication" />
        <CommandBinding Command="{x:Static api:Commands.ProgressReported}" Executed="progressReported" />
    </sr:RibbonWindow.CommandBindings>
    <sr:RibbonWindow.InputBindings>
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{x:Static api:Commands.Undo}" />
        <KeyBinding Key="Y" Modifiers="Ctrl" Command="{x:Static api:Commands.Redo}" />
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{x:Static ApplicationCommands.Copy}" />
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{x:Static ApplicationCommands.Cut}" />
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{x:Static ApplicationCommands.Paste}" />
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{x:Static api:Commands.PrintConversation}"/>
        <KeyBinding Key="B" Modifiers="Ctrl" Command="{x:Static api:Commands.ToggleBold}"/>
        <KeyBinding Key="I" Modifiers="Ctrl" Command="{x:Static api:Commands.ToggleItalic}"/>
        <KeyBinding Key="U" Modifiers="Ctrl" Command="{x:Static api:Commands.ToggleUnderline}"/>
        <KeyBinding Key="OemPlus" Modifiers="Ctrl" Command="{x:Static api:Commands.ZoomIn}"/>
        <KeyBinding Key="OemMinus" Modifiers="Ctrl" Command="{x:Static api:Commands.ZoomOut}"/>
    </sr:RibbonWindow.InputBindings>
    <sr:RibbonWindow.Ribbon>
        <sr:Ribbon x:Name="ribbon" Width="Auto" HorizontalAlignment="Stretch" ShowHelp="false" ApplicationButtonImage="\Resources\Ribbon-ApplicationButton.png" />
    </sr:RibbonWindow.Ribbon>
    <sr:RibbonWindow.StatusBar>
        <chrome:StatusBar Width="{Binding ElementName=ribbonWindow, Path=ActualWidth}"/>
    </sr:RibbonWindow.StatusBar>
    <Grid>
        <Grid x:Name="EffectRoot">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="friendContent" Width="0"/>
                    <ColumnDefinition x:Name="friendSplitter" Width="10"/>
                    <ColumnDefinition x:Name="canvasContent" />
                    <ColumnDefinition x:Name="gridSplitter" Width="10"/>
                    <ColumnDefinition x:Name="scratchPadContent" Width ="auto" />
                </Grid.ColumnDefinitions>
                <components:Friends Grid.Column="0" Height="auto" Width="auto" x:Name="friends" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <sandpit:S15Boards />
                </components:Friends>
                <GridSplitter x:Name="friendGridSplitter" Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Stretch"
                  ShowsPreview="True"
                  Width="10"
                  Visibility="{Binding ElementName=friends, Path=Visibility}" />
                <Grid Grid.Column="2">
                    <Grid x:Name="adornerGrid" Margin="0,0,27,27" SizeChanged="adornerGrid_SizeChanged">
                        <InkCanvas EditingMode="None" Background="Transparent" x:Name="adorner"/>
                        <Viewbox x:Name="canvasViewBox" SizeChanged="zoomConcernedControlSizeChanged">
                            <ScrollViewer x:Name="scroll" SizeChanged="zoomConcernedControlSizeChanged" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <components:PresentationSpace Height="auto" Width="auto" x:Name="canvas"/>
                            </ScrollViewer>
                        </Viewbox>
                        <Grid x:Name="dynamicContent" />
                        <Grid x:Name="CanvasBlocker" Visibility="Visible" IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto" Background="{StaticResource BackgroundGrayGradient}">
                        </Grid>
                        <Canvas Background="SteelBlue" Opacity="0.7"  IsHitTestVisible="True" x:Name="InputBlocker" Visibility="Collapsed">
                            <StackPanel x:Name="ProgressDisplay" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Canvas>
                        <components:ProviderMonitor x:Name="monitor" Visibility="Collapsed" />
                    </Grid>
                    <components:ScrollBar x:Name="adornerScroll"/>
                    <AdornerDecorator>
                        <Canvas>
                            <widgets:ArtistsPalette />
                            <components:PrivacyTools />
                        </Canvas>
                    </AdornerDecorator>
                </Grid>
                <GridSplitter x:Name="notesGridSplitter"
              Grid.Column="3"
              HorizontalAlignment="Center"
              VerticalAlignment="Stretch"
              ShowsPreview="True"
              Width="10"
              Visibility="{Binding ElementName=drawer, Path=Visibility}" />
                <components:Drawer Grid.Column="4"  Width="auto" x:Name="drawer" Visibility="Collapsed"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="auto"/>
                <components:LoadProgress x:Name="progress" Visibility="Collapsed" />
            </Grid>
            <Grid x:Name="TutorialLayer" Visibility="Collapsed" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-90,0,0" Height="{Binding ElementName=ribbonWindow, Path=ActualHeight}" Width="{Binding ElementName=ribbonWindow, Path=ActualWidth}" >
                <components:Tutorial/>
            </Grid>
        </Grid>
        <Grid x:Name="loginParent">
            <components:ConversationSearchBox x:Name="currentConversationSearchBox" Visibility="Collapsed"/>
            <components:Login x:Name="login"/>
        </Grid>
    </Grid>
</sr:RibbonWindow>