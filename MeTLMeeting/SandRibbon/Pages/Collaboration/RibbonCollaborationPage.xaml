<Page x:Class="SandRibbon.Pages.Collaboration.RibbonCollaborationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:api="clr-namespace:SandRibbon;assembly=SandRibbonInterop"
      xmlns:local="clr-namespace:SandRibbon.Pages.Collaboration" 
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:components="clr-namespace:SandRibbon.Components"
      Title="Collaboration">
    <Page.Resources>
        <sys:Double x:Key="RibbonFontSize">14</sys:Double>
        <Style TargetType="{x:Type RibbonButton}">
            <Setter Property="FontSize" Value="{StaticResource RibbonFontSize}" />
        </Style>
        <Style TargetType="{x:Type RibbonRadioButton}">
            <Setter Property="FontSize" Value="{StaticResource RibbonFontSize}" />
        </Style>
        <Style TargetType="{x:Type RibbonCheckBox}">
            <Setter Property="FontSize" Value="{StaticResource RibbonFontSize}" />
        </Style>
    </Page.Resources>
    <DockPanel>
        <Ribbon DockPanel.Dock="Top">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem Header="Create new" />
                    <RibbonApplicationMenuItem Header="Conversation overview" Click="RibbonApplicationMenuItem_ConversationOverview_Click"/>
                    <RibbonApplicationMenuItem Header="Search conversations" Click="RibbonApplicationMenuItem_SearchConversations_Click"/>
                    <RibbonApplicationMenuItem Header="Logout" />
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="Home">
                <RibbonGroup Header="Which tool are you using?">
                    <RibbonButton Label="Ink" LargeImageSource="/Resources/appbar.draw.pen.png" Command="{x:Static api:Commands.SetLayer}" CommandParameter="Sketch" />
                    <RibbonButton Label="Text" LargeImageSource="/Resources/appbar.text.serif.png" Command="{x:Static api:Commands.SetLayer}" CommandParameter="Text"/>
                    <RibbonButton Label="Image" LargeImageSource="/Resources/appbar.page.image.png" Command="{x:Static api:Commands.SetLayer}" CommandParameter="Image"/>
                    <RibbonButton Label="Select" LargeImageSource="/Resources/appbar.image.ants.png"/>
                </RibbonGroup>
                <RibbonGroup Header="Who can see your work?">
                    <components:PrivacyTools/>
                </RibbonGroup>
                <RibbonGroup Header="How much content do you see?">
                    <RibbonRadioButton GroupName="view" IsChecked="True" Label="All of it" />
                    <RibbonRadioButton GroupName="view" Label="The original page" />
                </RibbonGroup>
                <RibbonGroup Header="Whose content do you see?">
                    <components:ContentVisibility/>
                </RibbonGroup>
                <RibbonGroup x:Name="inkGroup">
                    <RibbonButton LargeImageSource="/Resources/appbar.draw.pen.minus.png" Background="White" Command="{x:Static api:Commands.SetInkCanvasMode}" CommandParameter="EraseByStroke">
                    </RibbonButton>
                    <RibbonButton LargeImageSource="/Resources/appbar.draw.pen.png" Background="Red" Command="{x:Static api:Commands.SetDrawingAttributes}">
                        <RibbonButton.CommandParameter>
                            <DrawingAttributes Color="Red" />
                        </RibbonButton.CommandParameter>
                    </RibbonButton>
                    <RibbonButton LargeImageSource="/Resources/appbar.draw.pen.png" Background="Blue" Command="{x:Static api:Commands.SetDrawingAttributes}">
                        <RibbonButton.CommandParameter>
                            <DrawingAttributes Color="Blue" />
                        </RibbonButton.CommandParameter>
                    </RibbonButton>
                    <RibbonButton LargeImageSource="/Resources/appbar.draw.pen.png" Background="Green" Command="{x:Static api:Commands.SetDrawingAttributes}">
                        <RibbonButton.CommandParameter>
                            <DrawingAttributes Color="Green" />
                        </RibbonButton.CommandParameter>
                    </RibbonButton>
                    <RibbonButton LargeImageSource="/Resources/appbar.draw.pen.png" Background="Black" Command="{x:Static api:Commands.SetDrawingAttributes}">
                        <RibbonButton.CommandParameter>
                            <DrawingAttributes Color="Black" />
                        </RibbonButton.CommandParameter>
                    </RibbonButton>
                    <RibbonButton LargeImageSource="/Resources/appbar.draw.marker.png" Background="Yellow" Command="{x:Static api:Commands.SetDrawingAttributes}">
                        <RibbonButton.CommandParameter>
                            <DrawingAttributes Color="Yellow" IsHighlighter="True"/>
                        </RibbonButton.CommandParameter>
                    </RibbonButton>
                </RibbonGroup>
                <RibbonGroup x:Name="textGroup">
                    <Button x:Name="hiddenButton" Visibility="Collapsed" Command="{Binding api:Commands.DummyCommandToProcessCanExecute}" Tag="This button should always be collapsed.  It is only being used to redirect a canExecute Handler."/>
                    <StackPanel>
                        <StackPanel Height="30" Orientation="Horizontal">
                            <ComboBox ToolTip="{DynamicResource FontFamilyToolTip}" Text="Font family"  Width="120" x:Name="fontFamily"   IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                            <ComboBox ToolTip="{DynamicResource FontSizeToolTip}" Text="Font size" x:Name="fontSize"  IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                        </StackPanel>
                        <StackPanel Height="30" Orientation="Horizontal">
                            <RibbonCheckBox x:Name="TextBoldButton" LargeImageSource="\Resources\appbar.text.bold.png" ToolTip="{DynamicResource BoldToolTip}" Click="valuesUpdated" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                            <RibbonToggleButton x:Name="TextItalicButton" LargeImageSource="\Resources\appbar.text.italic.png" ToolTip="{DynamicResource ItalicToolTip}" Click="valuesUpdated" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                            <RibbonToggleButton x:Name="TextUnderlineButton" LargeImageSource="\Resources\appbar.text.underline.png" ToolTip="{DynamicResource UnderlineToolTip}" Click="valuesUpdated" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                            <RibbonToggleButton x:Name="TextStrikethroughButton" LargeImageSource="\Resources\appbar.text.strikethrough.png" ToolTip="{DynamicResource StrikeThroughToolTip}" Click="valuesUpdated" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                            <RibbonButton ToolTip="{DynamicResource ClearFormattingToolTip}" LargeImageSource="\Resources\appbar.reset.png" x:Name="ClearFormattingButton" Label="Clear Formatting" Click="restoreDefaults" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                            <RibbonComboBox Label="1"                   
                  SelectionBoxWidth="62"
                  VerticalAlignment="Center" 
                  IsEditable="True" >
                                <RibbonGallery SelectedValue="Green"                          SelectedValuePath="Content"
                          MaxColumnCount="1">
                                    <RibbonGalleryCategory>
                                        <RibbonGalleryItem Content="Green" Foreground="Green" />
                                        <RibbonGalleryItem Content="Blue" Foreground="Blue" />
                                        <RibbonGalleryItem Content="Orange" Foreground="Orange" />
                                    </RibbonGalleryCategory>
                                </RibbonGallery>
                            </RibbonComboBox>
                        </StackPanel>
                        <RibbonButton ToolTip="{DynamicResource IncreaseFontSizeToolTip}" LargeImageSource="\Resources\increaseFontSize.png" x:Name="IncreaseFontSizeButton" Label="Increase" Click="increaseFont" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                        <RibbonButton ToolTip="{DynamicResource DecreaseFontSizeToolTip}" LargeImageSource="\Resources\decreaseFontSize.png" x:Name="DecreaseFontSizeButton" Label="Decrease" Click="decreaseFont" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"/>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup x:Name="imageGroup">
                </RibbonGroup>
                <RibbonGroup Header="Zoom">
                    <components:ZoomControls/>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <Grid x:Name="EffectRoot">
            <Grid x:Name="columns">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LHSDrawerDefinition" Width="*" MaxWidth="200"/>
                    <ColumnDefinition x:Name="LHSSplitterDefinition" Width="40"/>
                    <ColumnDefinition x:Name="canvasContentDefinition" MinWidth="40" />
                    <ColumnDefinition x:Name="RHSSplitterDefinition" Width="40" />
                    <ColumnDefinition x:Name="RHSDrawerDefinition" Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" x:Name="leftDrawer" Visibility="Visible">
                    <components:RoleQuickControls />
                </Grid>
                <GridSplitter x:Name="chatGridsplitter" Grid.Column="1" Visibility="Visible" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="True" Width="40" />
                <Grid Grid.Column="2">
                    <Grid x:Name="adornerGrid" Margin="0,0,27,27">
                        <Canvas x:Name="syncPageOverlay"/>
                        <Viewbox x:Name="canvasViewBox" SizeChanged="zoomConcernedControlSizeChanged">
                            <ScrollViewer x:Name="scroll" SizeChanged="zoomConcernedControlSizeChanged" ScrollChanged="scroll_ScrollChanged" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <components:PresentationSpace Height="auto" Width="auto" x:Name="canvas"/>
                            </ScrollViewer>
                        </Viewbox>
                        <Grid x:Name="dynamicContent" />
                        <Grid x:Name="CanvasBlocker" Visibility="Visible" IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto"/>
                    </Grid>
                    <components:ScrollBar x:Name="adornerScroll" ScrollViewer="{Binding ElementName=scroll}" Target="presentationSpace"/>
                    <AdornerDecorator>
                        <Canvas x:Name="privacyTools"/>
                    </AdornerDecorator>
                </Grid>
                <GridSplitter x:Name="slidesGridsplitter" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="True" Width="40" />
                <Grid Grid.Column="4" x:Name="rightDrawer">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding ElementName=NavigationControls, Path=Height}"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <components:SlideNavigationControls x:Name="NavigationControls" Grid.Row="0"/>
                    <TabControl Grid.Row="1" x:Name="contentTabs" TabStripPlacement="Bottom" Background="Transparent">
                        <TabItem Header="Pages" Width="80">
                            <components:SlideDisplay x:Name="slides" />
                        </TabItem>
                        <TabItem Header="Notes" Width="80">
                            <Grid>
                                <Grid x:Name="notesAdornerGrid" Margin="0,0,27,27">
                                    <Viewbox x:Name="notesViewBox" SizeChanged="notepadSizeChanged">
                                        <ScrollViewer x:Name="notesScroll" SizeChanged="notepadSizeChanged" ScrollChanged="notepadScrollChanged" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                            <components:PrivateNotepadSpace Height="auto" Width="auto" x:Name="privateNotes" />
                                        </ScrollViewer>
                                    </Viewbox>
                                </Grid>
                                <components:ScrollBar x:Name="notesAdornerScroll" ScrollViewer="{Binding ElementName=notesScroll}" Target="notepad"/>
                                <AdornerDecorator>
                                    <Canvas x:Name="notesPrivacyTools"/>
                                </AdornerDecorator>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="ParticipantsTabItem" Header="Participants">
                            <components:Participants/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</Page>
