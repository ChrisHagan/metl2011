<UserControl x:Class="SandRibbon.Tabs.Groups.PenColors"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sr="clr-namespace:Divelements.SandRibbon;assembly=Divelements.SandRibbon"
    xmlns:api="clr-namespace:SandRibbon;assembly=SandRibbonInterop"
    xmlns:dict="clr-namespace:SandRibbon.Components.ResourceDictionaries"
    xmlns:my="clr-namespace:SandRibbon">
    <StackPanel x:Name="LayoutRoot" Orientation="Horizontal">
        <StackPanel.Resources>
            <ImageBrush ImageSource="\Resources\Ribbon-Palette.png" x:Key="SpectrumBrush"/>
            <LinearGradientBrush x:Key="BrushGradientBackground" StartPoint="0,0" EndPoint="1,0" MappingMode="RelativeToBoundingBox">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <DrawingBrush x:Key="CheckerboardBackground" Viewport="0,0,.25,.25" TileMode="Tile" Stretch="None">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <DrawingGroup.Children>
                            <GeometryDrawing Brush="DarkGray" Geometry="F1 M 0,0 5,0 5,10 10,10 10,5 0,5 0,0  Z"/>
                        </DrawingGroup.Children>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </StackPanel.Resources>
        <dict:RibbonPanel>
            <dict:RadioButton x:Name="drawRadio" Visibility="Collapsed" ToolTip="{DynamicResource PenToolTip}" Icon="\Resources\Inking.png" Text="Draw" Command="api:Commands.SetInkCanvasMode" CommandParameter="Ink" IsChecked="True"/>
            <dict:RadioButton x:Name="selectRadio" ToolTip="{DynamicResource SelectToolTip}"  Icon="\Resources\SelectInk.png" Text="Select" Command="api:Commands.SetInkCanvasMode" CommandParameter="Select" />
            <dict:RadioButton x:Name="eraseRadio" ToolTip="{DynamicResource EraserToolTip}" Icon="\Resources\ShinyEraser.png" Text="Erase" Command="api:Commands.SetInkCanvasMode" CommandParameter="EraseByStroke"/>
        </dict:RibbonPanel>
        <Button x:Name="hiddenButton" Visibility="Collapsed" Command="api:Commands.DummyCommandToProcessCanExecute" Tag="This button should always be collapsed.  It is only being used to redirect a canExecute Handler."/>
        <dict:PenColorsListBox x:Name="defaultColours" SelectionChanged="ChangeColorFromPreset" Background="Transparent" IsEnabled="{Binding ElementName=hiddenButton, Path=IsEnabled}"
                ParentActiveVariant="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sr:RibbonGroup}}, Path=ActiveVariant}"
                ItemsSource="{Binding Path=currentColourValues}"
                ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" Padding="0" BorderBrush="Transparent">
            <dict:PenColorsListBox.ItemTemplate>
                <DataTemplate>
                    <Border Tag="{Binding Path=Index}"
                            Padding="2" BorderBrush="Transparent" Name="buttonBorder" BorderThickness="1" Height="18" Width="30">
                        <Border.ToolTip>
                            <dict:MeTLContentToolTip TitleText="{Binding Path=Attributes, Converter={x:Static my:Converters.AvailablePenTitleConverter}}"
                                                                          ContentText="{Binding Path=Attributes, Converter={x:Static my:Converters.AvailablePenContentConverter}}">
                                <dict:MeTLContentToolTip.ContentElement>
                                    <Viewbox>
                                        <Grid Width="40" Height="40" >
                                            <Rectangle Fill="{StaticResource CheckerboardBackground}"/>
                                            <Rectangle Fill="{StaticResource BrushGradientBackground}"/>
                                            <Border BorderThickness="0" Padding="0" ClipToBounds="True" >
                                                <Viewbox Height="40" Width="40">
                                                    <Grid>
                                                        <Grid Visibility="{Binding Path=IsHighlighter, Converter={x:Static my:Converters.ReverseBoolToVisibilityConverter}}">
                                                            <InkCanvas Background="Transparent" Strokes="{Binding Path=DrawnPenPreviewStroke}" Height="100" Width="100"/>
                                                            <Polygon Height="100" Width="100" Points="{Binding Path=BrushPreviewPoints}" Fill="{Binding Path=ColorBrush}" />
                                                            <Image Height="100" Width="100" Source="/Resources/MeTLPenOverlay.png"/>
                                                        </Grid>
                                                        <Grid Visibility="{Binding Path=IsHighlighter, Converter={x:Static my:Converters.BoolToVisibilityConverter}}">
                                                            <InkCanvas Background="Transparent" Strokes="{Binding Path=DrawnHighlighterPreviewStroke}" Height="100" Width="100"/>
                                                            <Viewbox Height="100" Width="100">
                                                                <Polygon Height="400" Width="400" Points="{Binding Path=HighlighterPreviewPoints}" Fill="{Binding Path=ColorBrush}" />
                                                            </Viewbox>
                                                            <Image Height="100" Width="100" Source="/Resources/MeTLHighlighterOverlay.png"/>
                                                        </Grid>
                                                    </Grid>
                                                </Viewbox>
                                            </Border>
                                        </Grid>
                                    </Viewbox>
                                </dict:MeTLContentToolTip.ContentElement>
                            </dict:MeTLContentToolTip>
                        </Border.ToolTip>
                        <StackPanel Name="Stack" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                            <Viewbox Name="Main" Height="Auto" Width="18">
                                <Grid Width="40" Height="40" >
                                    <Rectangle Fill="{StaticResource CheckerboardBackground}"/>
                                    <Rectangle Fill="{StaticResource BrushGradientBackground}"/>
                                    <Border BorderThickness="0" Padding="0" ClipToBounds="True" >
                                        <Viewbox Height="40" Width="40">
                                            <Grid>
                                                <Grid Visibility="{Binding Path=IsHighlighter, Converter={x:Static my:Converters.ReverseBoolToVisibilityConverter}}">
                                                    <InkCanvas Background="Transparent" Strokes="{Binding Path=DrawnPenPreviewStroke}" Height="100" Width="100"/>
                                                    <Polygon Height="100" Width="100" Points="{Binding Path=BrushPreviewPoints}" Fill="{Binding Path=ColorBrush}" />
                                                    <Image Height="100" Width="100" Source="/Resources/MeTLPenOverlay.png"/>
                                                </Grid>
                                                <Grid Visibility="{Binding Path=IsHighlighter, Converter={x:Static my:Converters.BoolToVisibilityConverter}}">
                                                    <InkCanvas Background="Transparent" Strokes="{Binding Path=DrawnHighlighterPreviewStroke}" Height="100" Width="100"/>
                                                    <Viewbox Height="100" Width="100">
                                                        <Polygon Height="400" Width="400" Points="{Binding Path=HighlighterPreviewPoints}" Fill="{Binding Path=ColorBrush}" />
                                                    </Viewbox>
                                                    <Image Height="100" Width="100" Source="/Resources/MeTLHighlighterOverlay.png"/>
                                                </Grid>
                                            </Grid>
                                        </Viewbox>
                                    </Border>
                                </Grid>
                            </Viewbox>
                            <Button 
                                Height="Auto" Width="12"
                                    Margin="0" HorizontalAlignment="Stretch" 
                                        Grid.Row="1" x:Name="OpenPopup" Click="OpenColourSettingPopup" Tag="{Binding Path=Index}">
                                <Button.ToolTip>
                                    <dict:MeTLContentToolTip TitleText="{Binding Path=Attributes, Converter={x:Static my:Converters.AvailablePenDropDownConverter}}"
                                                                          ContentText="{Binding Path=Attributes, Converter={x:Static my:Converters.AvailablePenDropDownContentConverter}}">
                                        <dict:MeTLContentToolTip.ContentElement>
                                            <Viewbox>
                                                <Grid Width="40" Height="40" >
                                                    <Rectangle Fill="{StaticResource CheckerboardBackground}"/>
                                                    <Rectangle Fill="{StaticResource BrushGradientBackground}"/>
                                                    <Border BorderThickness="0" Padding="0" ClipToBounds="True" >
                                                        <Viewbox Height="40" Width="40">
                                                            <Grid>
                                                                <Grid Visibility="{Binding Path=IsHighlighter, Converter={x:Static my:Converters.ReverseBoolToVisibilityConverter}}">
                                                                    <InkCanvas Background="Transparent" Strokes="{Binding Path=DrawnPenPreviewStroke}" Height="100" Width="100"/>
                                                                    <Polygon Height="100" Width="100" Points="{Binding Path=BrushPreviewPoints}" Fill="{Binding Path=ColorBrush}" />
                                                                    <Image Height="100" Width="100" Source="/Resources/MeTLPenOverlay.png"/>
                                                                </Grid>
                                                                <Grid Visibility="{Binding Path=IsHighlighter, Converter={x:Static my:Converters.BoolToVisibilityConverter}}">
                                                                    <InkCanvas Background="Transparent" Strokes="{Binding Path=DrawnHighlighterPreviewStroke}" Height="100" Width="100"/>
                                                                    <Viewbox Height="100" Width="100">
                                                                        <Polygon Height="400" Width="400" Points="{Binding Path=HighlighterPreviewPoints}" Fill="{Binding Path=ColorBrush}" />
                                                                    </Viewbox>
                                                                    <Image Height="100" Width="100" Source="/Resources/MeTLHighlighterOverlay.png"/>
                                                                </Grid>
                                                            </Grid>
                                                        </Viewbox>
                                                    </Border>
                                                </Grid>
                                            </Viewbox>
                                        </dict:MeTLContentToolTip.ContentElement>
                                    </dict:MeTLContentToolTip>
                                </Button.ToolTip>
                                <Viewbox>
                                    <Grid Width="30" Height="30">
                                        <Polygon HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="DarkGray" Fill="LightGray" Points="0,0 10,0 5,5 0,0"/>
                                    </Grid>
                                </Viewbox>
                            </Button>
                        </StackPanel>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sr:RibbonGroup}}, Path=ActiveVariant}" Value="Small">
                            <Setter TargetName="buttonBorder" Property="Height" Value="18"/>
                            <Setter TargetName="buttonBorder" Property="Width" Value="30"/>
                            <Setter TargetName="Stack" Property="Orientation" Value="Horizontal"/>
                            <Setter TargetName="Main" Property="Width" Value="18"/>
                            <Setter TargetName="Main" Property="Height" Value="Auto"/>
                            <Setter TargetName="OpenPopup" Property="Width" Value="12"/>
                            <Setter TargetName="OpenPopup" Property="Height" Value="Auto"/>
                            <Setter TargetName="OpenPopup" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="OpenPopup" Property="VerticalAlignment" Value="Stretch"/>
                            <Setter TargetName="Main" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="Main" Property="VerticalAlignment" Value="Stretch"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sr:RibbonGroup}}, Path=ActiveVariant}" Value="Medium">
                            <Setter TargetName="buttonBorder" Property="Height" Value="28"/>
                            <Setter TargetName="buttonBorder" Property="Width" Value="45"/>
                            <Setter TargetName="Stack" Property="Orientation" Value="Horizontal"/>
                            <Setter TargetName="Main" Property="Width" Value="27"/>
                            <Setter TargetName="Main" Property="Height" Value="Auto"/>
                            <Setter TargetName="OpenPopup" Property="Width" Value="18"/>
                            <Setter TargetName="OpenPopup" Property="Height" Value="Auto"/>
                            <Setter TargetName="OpenPopup" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="OpenPopup" Property="VerticalAlignment" Value="Stretch"/>
                            <Setter TargetName="Main" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="Main" Property="VerticalAlignment" Value="Stretch"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sr:RibbonGroup}}, Path=ActiveVariant}" Value="Large">
                            <Setter TargetName="buttonBorder" Property="Height" Value="62"/>
                            <Setter TargetName="buttonBorder" Property="Width" Value="50"/>
                            <Setter TargetName="Stack" Property="Orientation" Value="Vertical"/>
                            <Setter TargetName="Main" Property="Width" Value="Auto"/>
                            <Setter TargetName="Main" Property="Height" Value="40"/>
                            <Setter TargetName="OpenPopup" Property="Width" Value="Auto"/>
                            <Setter TargetName="OpenPopup" Property="Height" Value="25"/>
                            <Setter TargetName="OpenPopup" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="OpenPopup" Property="VerticalAlignment" Value="Stretch"/>
                            <Setter TargetName="Main" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="Main" Property="VerticalAlignment" Value="Stretch"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dict:PenColorsListBox}}, Path=IsEnabled}" Value="False">
                            <Setter TargetName="Main" Property="Opacity" Value="0.2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dict:PenColorsListBox}}, Path=IsEnabled}" Value="True">
                            <Setter TargetName="Main" Property="Opacity" Value="1"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </dict:PenColorsListBox.ItemTemplate>
            <dict:PenColorsListBox.Template>
                <ControlTemplate>
                    <WrapPanel Name="penStack" Orientation="Vertical" IsItemsHost="True"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dict:PenColorsListBox.ParentActiveVariant" Value="Small">
                            <Setter TargetName="penStack" Property="WrapPanel.Orientation" Value="Vertical"/>
                        </Trigger>
                        <Trigger Property="dict:PenColorsListBox.ParentActiveVariant" Value="Medium">
                            <Setter TargetName="penStack" Property="WrapPanel.Orientation" Value="Vertical"/>
                        </Trigger>
                        <Trigger Property="dict:PenColorsListBox.ParentActiveVariant" Value="Large">
                            <Setter TargetName="penStack" Property="WrapPanel.Orientation" Value="Horizontal"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </dict:PenColorsListBox.Template>
        </dict:PenColorsListBox>
        <Popup x:Name="ColourSettingPopup" Placement="Bottom" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Fade">
            <Border Height="300" Width="250" BorderThickness="1" BorderBrush="LightGray" CornerRadius="2" Padding="2" Background="{StaticResource BackgroundBlueGradient}">
                <StackPanel>
                    <Label Content="Change the colour"/>
                    <ListBox x:Name="ColourChooser" Height="160" 
                             Background="Transparent"
                             ItemsSource="{Binding Path=simpleColourSet}"
                             SelectionChanged="ChangeColour">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="4" Columns="6" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid PreviewMouseUp="ColourUp"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                        Width="Auto" Height="Auto" Background="Transparent">
                                    <Grid.ToolTip>
                                        <dict:MeTLImageToolTip TitleText="Change the colour of this tool" ContentText="{Binding Converter={x:Static my:Converters.ColourToNameConverter}}"/>
                                    </Grid.ToolTip>
                                    <Rectangle Fill="{Binding}" Margin="3" IsHitTestVisible="False"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Label Content="Change the size"/>
                    <ListBox x:Name="SizeChooser" Height="40"
                             Background="Transparent" 
                             ItemsSource="{Binding Path=simpleSizeSet}"
                             SelectionChanged="ChangeSize">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid PreviewMouseUp="SizeUp"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                        Width="Auto" Height="Auto" Background="Transparent">
                                    <Grid.ToolTip>
                                        <dict:MeTLImageToolTip TitleText="Change the thickness of this tool" ContentText="{Binding}"/>
                                    </Grid.ToolTip>
                                    <Rectangle Margin="2"
                                    Fill="Black" IsHitTestVisible="False" 
                                    StrokeThickness="1" Width="Auto"  
                                    Stroke="Black" HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Center" Height="{Binding}"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Click="ResetToDefault" ToolTip="{DynamicResource ResetPenToDefaultToolTip}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Rectangle Width="25" Height="20" x:Name="ColourSettingPopupDefaultColour"/>
                            <Label Content="Reset pen to default settings" FontWeight="Regular" FontSize="11"/>
                            <Rectangle Width="25" Fill="Black" x:Name="ColourSettingPopupDefaultSize"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Border>
        </Popup>
    </StackPanel>
</UserControl>
