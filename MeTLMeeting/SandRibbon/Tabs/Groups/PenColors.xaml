<sr:RibbonGroup x:Class="SandRibbon.Tabs.Groups.PenColors"
    Header="Available Pens"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sr="clr-namespace:Divelements.SandRibbon;assembly=Divelements.SandRibbon"
    xmlns:api="clr-namespace:SandRibbon;assembly=SandRibbonInterop"
    xmlns:groups="clr-namespace:SandRibbon.Tabs.Groups"
    xmlns:SandRibbonInterop="clr-namespace:SandRibbonInterop;assembly=SandRibbonInterop"
    xmlns:core="clr-namespace:System;assembly=mscorlib">
    <sr:RibbonGroup.Resources>
        <core:String x:Key="preferredDisplayIndex">2</core:String>
    </sr:RibbonGroup.Resources>
    <StackPanel x:Name="LayoutRoot" Orientation="Horizontal">
        <StackPanel.Resources>
            <groups:AttributesToStringConverter x:Key="AttributesToStringConverter"/>
            <groups:IntTextConverter x:Key="IntTextConverter"/>
            <groups:HueTextConverter x:Key="HueSliderTextConverter"/>
            <groups:DoubleTextConverter x:Key="DoubleSliderTextConverter"/>
            <groups:RoundingConverter x:Key="RoundingConverter"/>
            <groups:HueSliderConverter x:Key="HueSliderConverter"/>
            <groups:DoubleSliderConverter x:Key="DoubleSliderConverter"/>
            <groups:ReverseBoolToVisibilityConverter x:Key="reverseBoolToVisibilityConverter"/>
            <groups:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <groups:HexToColourConverter x:Key="HexToColourConverter"/>
            <groups:colourContrastConverter x:Key="colourContrastConverter"/>
            <ImageBrush ImageSource="\Resources\Ribbon-Palette.png" x:Key="SpectrumBrush"/>
            <LinearGradientBrush x:Key="BrushGradientBackground" StartPoint="0,0" EndPoint="1,0" MappingMode="RelativeToBoundingBox">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <DrawingBrush x:Key="CheckerboardBackground" Viewport="0,0,.25,.25" TileMode="Tile" Stretch="None">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <DrawingGroup.Children>
                            <GeometryDrawing Brush="DarkGray" Geometry="F1 M 0,0 5,0 5,10 10,10 10,5 0,5 0,0  Z"/>
                        </DrawingGroup.Children>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </StackPanel.Resources>
        <SandRibbonInterop:RadioButton x:Name="Draw" ToolTip="{StaticResource PenToolTip}" Icon="\Resources\Inking.png" Text="Draw" Command="api:Commands.SetInkCanvasMode" CommandParameter="Ink" IsChecked="True"/>
        <SandRibbonInterop:RadioButton ToolTip="{StaticResource SelectToolTip}"  Icon="\Resources\SelectShiny.png" Text="Select" Command="api:Commands.SetInkCanvasMode" CommandParameter="Select" />
        <SandRibbonInterop:RadioButton ToolTip="{StaticResource EraserToolTip}" Icon="\Resources\ShinyEraser.png" Text="Erase" Command="api:Commands.SetInkCanvasMode" CommandParameter="EraseByStroke"/>
        <ItemsControl x:Name="defaultColours">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Tag="{Binding Path=Index}" IsEnabled="{Binding ElementName=previousColors, Path=IsEnabled}" BorderBrush="Transparent" BorderThickness="0" Click="ChangeColorFromPreset" Margin="0">
                        <!--<Button.ToolTip>
                            <ToolTip>
                                <Border Background="{StaticResource BackgroundBlueGradient}" BorderBrush="DarkGray" BorderThickness="1">
                                    <Grid Margin="2">
                                        <Rectangle Name="BackgroundColour" RadiusX="10" RadiusY="10" Fill="{Binding Path=XAMLColorName}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="30" />
                                        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="30" Name="buttonHighlighterGlyph" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource boolToVisibilityConverter}}" Source="\Resources\Highlighter.png"/>
                                        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="30" Name="buttonPenGlyph" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource reverseBoolToVisibilityConverter}}" Source="\Resources\Pen.png"/>
                                        <TextBlock Margin="30,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"  FontSize="14" FontWeight="Bold" 
                           Text="{Binding Path=XAMLColorName}"/>
                                        <TextBlock Margin="0,30,0,0" TextWrapping="Wrap" 
                           Text="{Binding Path=., Converter={StaticResource AttributesToStringConverter}}"/>
                                    </Grid>
                                </Border>
                            </ToolTip>
                        </Button.ToolTip>-->
                        <Button.Template>
                            <ControlTemplate>
                                <Border Padding="2" BorderBrush="Transparent" Name="buttonBorder" BorderThickness="1" Height="65" Width="50">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="25"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle Grid.Row="0" Fill="{StaticResource CheckerboardBackground}"/>
                                        <Rectangle Grid.Row="0" Grid.RowSpan="2" Fill="{StaticResource BrushGradientBackground}"/>
                                        <Border BorderThickness="0" Padding="0" Grid.Row="0" ClipToBounds="True">
                                            <Grid>
                                                <InkPresenter 
                                                      Strokes="{Binding Path=BrushPreviewStroke}"/>
                                                <InkPresenter 
                                                      Strokes="{Binding Path=HighlighterPreviewStroke}"
                                                      Visibility="{Binding Path=IsHighlighter, Converter={StaticResource boolToVisibilityConverter}}" />
                                            </Grid>
                                        </Border>
                                        <!--<Label Grid.Row="0" Name="buttonSizeShadow" Visibility="Collapsed" Content="{Binding Path=PenSize}" FontSize="10" Margin="1,0,0,-1" Foreground="Black" VerticalAlignment="Bottom"/>
                                        <Label Grid.Row="0" Name="buttonSize" Visibility="Collapsed" Content="{Binding Path=PenSize}" FontSize="10" Foreground="White" VerticalAlignment="Bottom"/>
                                        <Image Grid.Row="0" Name="buttonHighlighterGlyph" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource boolToVisibilityConverter}}" Source="\Resources\Highlighter.png" Height="30" Width="30" VerticalAlignment="Top"/>
                                        <Image Grid.Row="0" Name="buttonPenGlyph" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource reverseBoolToVisibilityConverter}}" Source="\Resources\Pen.png" Height="30" Width="30" VerticalAlignment="Top"/>
                                        -->
                                        <Button Margin="0" HorizontalAlignment="Stretch" Width="Auto" Grid.Row="1" x:Name="OpenPopup" Click="OpenColourSettingPopup" Tag="{Binding Path=Index}">
                                            <Polygon Stroke="DarkGray" Fill="LightGray" Points="0,0 10,0 5,5 0,0"/>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true" >
                                        <Setter Property="BorderBrush" Value="{StaticResource MouseOverGradient}" TargetName="buttonBorder"/>
                                        <Setter Property="Background" Value="{StaticResource MouseOverGradient}" TargetName="buttonBorder"/>
                                        <!--<Setter Property="Visibility" Value="Visible" TargetName="buttonSize"/>
                                        <Setter Property="Visibility" Value="Visible" TargetName="buttonSizeShadow"/>-->
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="false" >
                                        <!--<Setter Property="Visibility" TargetName="buttonHighlighterGlyph" Value="Collapsed"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="buttonSize"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="buttonSizeShadow"/>
                                        <Setter Property="Visibility" TargetName="buttonPenGlyph" Value="Collapsed"/>-->
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Popup x:Name="ColourSettingPopup" Placement="Bottom" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Fade">
            <Border Height="300" Width="250" BorderThickness="1" BorderBrush="LightGray" CornerRadius="2" Padding="2" Background="{StaticResource BackgroundBlueGradient}">
                <StackPanel>
                    <Button Click="ResetToDefault">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Rectangle Height="20" Width="25" x:Name="ColourSettingPopupDefaultColour"/>
                            <Label Content="Reset pen to default settings" FontWeight="Regular" FontSize="11"/>
                        </StackPanel>
                    </Button>
                    <Label Content="Change the colour"/>
                    <ItemsControl x:Name="ColourChooser" Height="160">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="4" Columns="6"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Background="{Binding}" Click="ChangeColour"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Label Content="Change the size"/>
                    <ItemsControl x:Name="SizeChooser" Height="40">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Name="Button" Click="ChangeSize" Tag="{Binding}">
                                    <Rectangle Fill="Black" StrokeThickness="1" Stroke="Black" HorizontalAlignment="Stretch" Width="{Binding ElementName=Button,Path=ActualWidth}" VerticalAlignment="Center" Height="{Binding}"/>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
        </Popup>
    </StackPanel>
</sr:RibbonGroup>
