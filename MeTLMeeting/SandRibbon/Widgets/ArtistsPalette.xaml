<UserControl x:Class="SandRibbon.Widgets.ArtistsPalette"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sr="clr-namespace:Divelements.SandRibbon;assembly=Divelements.SandRibbon"
    xmlns:api="clr-namespace:SandRibbon;assembly=SandRibbonInterop"
    xmlns:groups="clr-namespace:SandRibbon.Tabs.Groups"
    xmlns:SandRibbonInterop="clr-namespace:SandRibbonInterop;assembly=SandRibbonInterop"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    x:Name="RichInkOptionsPopup" 
    Height="395" >
    <UserControl.Resources>
        <groups:AttributesToStringConverter x:Key="AttributesToStringConverter"/>
        <groups:IntTextConverter x:Key="IntTextConverter"/>
        <groups:HueTextConverter x:Key="HueSliderTextConverter"/>
        <groups:DoubleTextConverter x:Key="DoubleSliderTextConverter"/>
        <groups:RoundingConverter x:Key="RoundingConverter"/>
        <groups:HueSliderConverter x:Key="HueSliderConverter"/>
        <groups:DoubleSliderConverter x:Key="DoubleSliderConverter"/>
        <groups:ReverseBoolToVisibilityConverter x:Key="reverseBoolToVisibilityConverter"/>
        <groups:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <groups:HexToColourConverter x:Key="HexToColourConverter"/>
        <groups:colourContrastConverter x:Key="colourContrastConverter"/>
        <ImageBrush ImageSource="\Resources\Ribbon-Palette.png" x:Key="SpectrumBrush"/>
    </UserControl.Resources>
    <Grid>
        <Border Height="395" BorderThickness="1" BorderBrush="LightGray" CornerRadius="2" Padding="2" Background="{StaticResource BackgroundBlueGradient}">
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <UniformGrid Rows="1">
                        <Button Click="SwitchImage" Content="Spectrum" Tag="Spectrum"/>
                        <Button Click="SwitchImage" Content="ColorBars" Tag="ColourBars"/>
                        <Button Click="SwitchImage" Content="Custom Image" Tag="Custom"/>
                    </UniformGrid>
                    <Grid>
                        <Image Visibility="Visible" x:Name="ColourPicker" MaxHeight="352" MaxWidth="352" Source="\Resources\Spectrum.png" PreviewMouseDown="ColourPickerMouseDown" PreviewMouseMove="ColourPickerMouseMove" PreviewMouseUp="ColourPickerMouseUp"/>
                    </Grid>
                </StackPanel>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Height="25">
                    </StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="65"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="65"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="Red"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Green"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Blue"/>
                        <Label Grid.Row="3" Grid.Column="0" Content="Alpha"/>
                        <TextBox Grid.Row="0" Grid.Column="1" x:Name="RedTextBox" Text="{Binding Path=CurrentR, Mode=TwoWay, Converter={StaticResource IntTextConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" x:Name="GreenTextBox" Text="{Binding Path=CurrentG, Mode=TwoWay, Converter={StaticResource IntTextConverter}}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" x:Name="BlueTextBox" Text="{Binding Path=CurrentB, Mode=TwoWay, Converter={StaticResource IntTextConverter}}"/>
                        <TextBox Grid.Row="3" Grid.Column="1" x:Name="AlphaTextBox" Text="{Binding Path=CurrentA, Mode=TwoWay, Converter={StaticResource IntTextConverter}}"/>
                        <Slider Grid.Row="0" Grid.Column="2" x:Name="RedSlider" Value="{Binding Path=CurrentR, Mode=TwoWay, Converter={StaticResource RoundingConverter}}" TickFrequency="25" TickPlacement="BottomRight" Maximum="255" Minimum="0" Interval="1"/>
                        <Slider Grid.Row="1" Grid.Column="2" x:Name="GreenSlider" Value="{Binding Path=CurrentG, Mode=TwoWay, Converter={StaticResource RoundingConverter}}" TickFrequency="25" TickPlacement="BottomRight" Maximum="255" Minimum="0" Interval="1"/>
                        <Slider Grid.Row="2" Grid.Column="2" x:Name="BlueSlider" Value="{Binding Path=CurrentB, Mode=TwoWay, Converter={StaticResource RoundingConverter}}" TickFrequency="25" TickPlacement="BottomRight" Maximum="255" Minimum="0" Interval="1"/>
                        <Slider Grid.Row="3" Grid.Column="2" x:Name="AlphaSlider" Value="{Binding Path=CurrentA, Mode=TwoWay, Converter={StaticResource RoundingConverter}}" TickFrequency="25" TickPlacement="BottomRight" Maximum="255" Minimum="0" Interval="1"/>
                        <Label Grid.Row="4" Grid.Column="0" Content="Hue"/>
                        <Label Grid.Row="5" Grid.Column="0" Content="Saturation"/>
                        <Label Grid.Row="6" Grid.Column="0" Content="Value"/>
                        <Label Grid.Row="7" Grid.Column="0" Content="Hex"/>
                        <TextBox Grid.Row="4" Grid.Column="1" x:Name="HueTextBox" Text="{Binding Path=CurrentH, Mode=TwoWay, Converter={StaticResource HueSliderTextConverter}}"/>
                        <TextBox Grid.Row="5" Grid.Column="1" x:Name="SaturationTextBox" Text="{Binding Path=CurrentS, Mode=TwoWay, Converter={StaticResource DoubleSliderTextConverter}}"/>
                        <TextBox Grid.Row="6" Grid.Column="1" x:Name="ValueTextBox" Text="{Binding Path=CurrentV, Mode=TwoWay, Converter={StaticResource DoubleSliderTextConverter}}"/>
                        <Slider Grid.Row="4" Grid.Column="2" x:Name="HueSlider" Value="{Binding Path=CurrentH, Mode=TwoWay, Converter={StaticResource HueSliderConverter}}" TickFrequency="36" TickPlacement="BottomRight" Maximum="360" Minimum="0" Interval="1" />
                        <Slider Grid.Row="5" Grid.Column="2" x:Name="SaturationSlider" Value="{Binding Path=CurrentS, Mode=TwoWay, Converter={StaticResource DoubleSliderConverter}}" TickFrequency=".1" TickPlacement="BottomRight" Maximum="1" Minimum="0" Interval="1"/>
                        <Slider Grid.Row="6" Grid.Column="2" x:Name="ValueSlider" TickFrequency=".1" Value="{Binding Path=CurrentV, Mode=TwoWay, Converter={StaticResource DoubleSliderConverter}}" TickPlacement="BottomRight" Maximum="1" Minimum="0" Interval="1"/>
                        <Label Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" x:Name="ColorHexValue" Content="{Binding Path=CurrentHex}"/>
                        <Label Grid.Row="8" Grid.Column="0" Content="Thickness"/>
                        <TextBox Grid.Row="8" Grid.Column="1" x:Name="PenSizeTextBox" Text="{Binding Path=CurrentPenSize, Mode=TwoWay, Converter={StaticResource DoubleSliderTextConverter}}"/>
                        <Slider Grid.Row="8" Grid.Column="2" x:Name="PenSizeSlider" Minimum="0.01" Maximum="50" Value="{Binding Path=CurrentPenSize, Mode=TwoWay}"/>
                        <UniformGrid Rows="1" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="3">
                            <Button Tag="0.5" Click="SetPenSizeByButton" Style="{StaticResource ThicknessButton}">
                                <Rectangle StrokeThickness="1" Stroke="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=Tag}" 
                                        Width="Auto" HorizontalAlignment="Stretch"/>
                            </Button>
                            <Button Tag="1" Click="SetPenSizeByButton" Style="{StaticResource ThicknessButton}">
                                <Rectangle StrokeThickness="1" Stroke="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=Tag}" 
                                        Width="Auto" HorizontalAlignment="Stretch"/>
                            </Button>
                            <Button Tag="3" Click="SetPenSizeByButton" Style="{StaticResource ThicknessButton}">
                                <Rectangle StrokeThickness="1" Stroke="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=Tag}" 
                                        Width="Auto" HorizontalAlignment="Stretch"/>
                            </Button>
                            <Button Tag="10" Click="SetPenSizeByButton" Style="{StaticResource ThicknessButton}">
                                <Rectangle StrokeThickness="1" Stroke="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=Tag}" 
                                        Width="Auto" HorizontalAlignment="Stretch"/>
                            </Button>
                            <Button Tag="25" Click="SetPenSizeByButton" Style="{StaticResource ThicknessButton}">
                                <Rectangle StrokeThickness="1" Stroke="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=Tag}" 
                                        Width="Auto" HorizontalAlignment="Stretch"/>
                            </Button>
                            <Button Tag="50" Click="SetPenSizeByButton" Style="{StaticResource ThicknessButton}">
                                <Rectangle StrokeThickness="1" Stroke="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" 
                                        Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=Tag}" 
                                        Width="Auto" HorizontalAlignment="Stretch"/>
                            </Button>
                        </UniformGrid>
                    </Grid>
                    <ToggleButton x:Name="HighlighterButton" IsChecked="{Binding Path=CurrentlyIsHighlighter}" ClickMode="Press" Click="SetHighlighter" Content="Highlighter"/>
                    <Grid Height="50">
                        <Rectangle VerticalAlignment="Center" Height="{Binding Path=CurrentPenSize}" x:Name="ColourPreview" Fill="{Binding Path=CurrentHex, Converter={StaticResource HexToColourConverter}}" Width="Auto" HorizontalAlignment="Stretch"/>
                    </Grid>
                </StackPanel>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsControl x:Name="previousColors" IsEnabled="False" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Tag="{Binding Path=ColorName}" IsEnabled="{Binding ElementName=previousColors, Path=IsEnabled}" BorderBrush="Transparent" BorderThickness="0" Click="ChangeColor" Margin="0">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border Padding="2" BorderBrush="Transparent" Name="buttonBorder" BorderThickness="1" Height="65" Width="50">
                                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                                    <Rectangle Name="BackgroundColour" RadiusX="10" RadiusY="10" Fill="{Binding Path=XAMLColorName, Converter={StaticResource colourContrastConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto"/>
                                                    <Rectangle Name="PenWidthIndicator" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource reverseBoolToVisibilityConverter}}" RadiusX="10" RadiusY="10" Fill="{Binding Path=XAMLColorName}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="{Binding Path=PenSize}" Width="Auto"/>
                                                    <Rectangle Name="HighlighterWidthIndicator" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource boolToVisibilityConverter}}" RadiusX="10" RadiusY="10" Fill="{Binding Path=XAMLColorName}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Height="Auto" Width="{Binding Path=PenSize}"/>
                                                    <Label Name="buttonSizeShadow" Visibility="Collapsed" Content="{Binding Path=PenSize}" FontSize="10" Margin="1,0,0,-1" Foreground="Black" VerticalAlignment="Bottom"/>
                                                    <Label Name="buttonSize" Visibility="Collapsed" Content="{Binding Path=PenSize}" FontSize="10" Foreground="White" VerticalAlignment="Bottom"/>
                                                    <Image Name="buttonHighlighterGlyph" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource boolToVisibilityConverter}}" Source="\Resources\Highlighter.png" Height="30" Width="30" VerticalAlignment="Top"/>
                                                    <Image Name="buttonPenGlyph" Visibility="{Binding Path=IsHighlighter, Converter={StaticResource reverseBoolToVisibilityConverter}}" Source="\Resources\Pen.png" Height="30" Width="30" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true" >
                                                    <Setter Property="BorderBrush" Value="{StaticResource MouseOverGradient}" TargetName="buttonBorder"/>
                                                    <Setter Property="Background" Value="{StaticResource MouseOverGradient}" TargetName="buttonBorder"/>
                                                    <Setter Property="Visibility" Value="Visible" TargetName="buttonSize"/>
                                                    <Setter Property="Visibility" Value="Visible" TargetName="buttonSizeShadow"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="false" >
                                                    <Setter Property="Visibility" Value="Collapsed" TargetName="buttonSize"/>
                                                    <Setter Property="Visibility" Value="Collapsed" TargetName="buttonSizeShadow"/>
                                                    <Setter Property="Visibility" TargetName="buttonHighlighterGlyph" Value="Collapsed"/>
                                                    <Setter Property="Visibility" TargetName="buttonPenGlyph" Value="Collapsed"/>
                                                </Trigger>

                                                <Trigger Property="Button.IsEnabled" Value="False">
                                                    <Setter TargetName="BackgroundColour" Property="Opacity" Value="0.2"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
